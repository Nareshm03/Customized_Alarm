{
    "checksum": "5816f391d8c79bdfe7f4141d7debc5b2433619f4d2635231a7c1328313095d9d",
    "data": {
    "id": "7ad2cfbc-673b-42f0-8cc3-37320770f5c4",
    "createdAt": 1748159222575,
    "updatedAt": 1748159269118,
    "title": "Repository.kt C:\\Users\\nares\\StudioProjects\\Tea...",
    "messages": [
        {
            "id": "f57f34c5-a8c8-4c5e-a6ca-7d86cbe002b4",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Repository.kt C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example teacherscheduler\\data 23 problems"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :272"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :283"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :294 ▲ Unused import directive :16"
                },
                {
                    "type": "text",
                    "text": "▲ Unused import directive :17"
                },
                {
                    "type": "text",
                    "text": "A Unused import directive :18"
                },
                {
                    "type": "text",
                    "text": "▲ Unused import directive :19"
                },
                {
                    "type": "text",
                    "text": "A Constructor parameter is never used as a property :23"
                },
                {
                    "type": "text",
                    "text": "A Property \"settings Dao\" is never used :28"
                },
                {
                    "type": "text",
                    "text": "▲ Function \"getAllActiveClasses Sync\" is never used:69 ▲ Function \"getAllActive Meetings Sync\" is never used :116 A Function \"getAllActiveSemesters Sync\" is never used :181 A Function \"getSemesterByld\" is never used :185"
                },
                {
                    "type": "text",
                    "text": "A Function \"getCurrentSemesterSync\" is never used :193"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :215"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :219"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :229"
                },
                {
                    "type": "text",
                    "text": "A Condition 'cloudld > O' is always false :272 ▲ Condition 'cloudld > O' is always false :283 ▲ Condition 'cloudld > O' is always false :294 Typo: In word 'unsynchronized' :269 Typo: In word 'unsynchronized' :280"
                },
                {
                    "type": "text",
                    "text": "Typo: In word 'unsynchronized' :291"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "app\\src\\main\\java\\com\\example\\teacherscheduler\\data\\Repository.kt",
                    "fsPath": "C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example\\teacherscheduler\\data\\Repository.kt",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "package com.example.teacherscheduler.data\n\nimport android.content.Context\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.work.ExistingWorkPolicy\nimport androidx.work.OneTimeWorkRequestBuilder\nimport androidx.work.WorkManager\nimport com.example.teacherscheduler.data.local.AppDatabase\nimport com.example.teacherscheduler.data.remote.FirebaseService\nimport com.example.teacherscheduler.model.AppSettings\nimport com.example.teacherscheduler.model.Class\nimport com.example.teacherscheduler.model.Meeting\nimport com.example.teacherscheduler.model.Semester\nimport com.example.teacherscheduler.util.DataSyncWorker\nimport com.example.teacherscheduler.util.toCalendar\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.withContext\nimport java.util.Calendar\nimport java.util.Date\nimport java.util.concurrent.TimeUnit\n\nclass Repository(private val context: Context) {\n    private val database = AppDatabase.getDatabase(context)\n    private val classDao = database.classDao()\n    private val meetingDao = database.meetingDao()\n    private val semesterDao = database.semesterDao()\n    private val settingsDao = database.settingsDao()\n    private val firebaseService = FirebaseService()\n    private val workManager = WorkManager.getInstance(context)\n    \n    init {\n        // Schedule periodic sync\n        schedulePeriodicSync()\n    }\n    \n    // Class operations\n    suspend fun insertClass(classItem: Class): Long {\n        // Insert into Room database\n        val roomId = classDao.insert(classItem)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n        \n        return roomId\n    }\n    \n    suspend fun updateClass(classItem: Class) {\n        // Update in Room\n        classDao.update(classItem)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    suspend fun deleteClass(classItem: Class) {\n        // Mark as inactive instead of deleting\n        val inactiveClass = classItem.copy(isActive = false)\n        classDao.update(inactiveClass)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    fun getAllActiveClasses(): LiveData<List<Class>> {\n        return classDao.getAllActiveClasses()\n    }\n    \n    suspend fun getAllActiveClassesSync(): List<Class> {\n        return classDao.getAllActiveClassesSync()\n    }\n    \n    suspend fun getClassById(id: Long): Class? {\n        return classDao.getClassById(id)\n    }\n    \n    fun getClassesForDay(date: Date): LiveData<List<Class>> {\n        val dateFormat = java.text.SimpleDateFormat(\"yyyy-MM-dd\", java.util.Locale.getDefault())\n        val dateString = dateFormat.format(date)\n        \n        return classDao.getClassesForDay(dateString)\n    }\n    \n    // Meeting operations\n    suspend fun insertMeeting(meeting: Meeting): Long {\n        // Insert into Room database\n        val roomId = meetingDao.insert(meeting)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n        \n        return roomId\n    }\n    \n    suspend fun updateMeeting(meeting: Meeting) {\n        // Update in Room\n        meetingDao.update(meeting)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    suspend fun deleteMeeting(meeting: Meeting) {\n        // Mark as inactive instead of deleting\n        val inactiveMeeting = meeting.copy(isActive = false)\n        meetingDao.update(inactiveMeeting)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    fun getAllActiveMeetings(): LiveData<List<Meeting>> {\n        return meetingDao.getAllActiveMeetings()\n    }\n    \n    suspend fun getAllActiveMeetingsSync(): List<Meeting> {\n        return meetingDao.getAllActiveMeetingsSync()\n    }\n    \n    suspend fun getMeetingById(id: Long): Meeting? {\n        return meetingDao.getMeetingById(id)\n    }\n    \n    fun getMeetingsForDay(date: Date): LiveData<List<Meeting>> {\n        val dateFormat = java.text.SimpleDateFormat(\"yyyy-MM-dd\", java.util.Locale.getDefault())\n        val dateString = dateFormat.format(date)\n        \n        return meetingDao.getMeetingsForDay(dateString)\n    }\n    \n    // Semester operations\n    suspend fun insertSemester(semester: Semester): Long {\n        // Insert into Room database\n        val roomId = semesterDao.insert(semester)\n        \n        // If this is marked as current semester, clear other flags\n        if (semester.isCurrentSemester) {\n            semesterDao.clearCurrentSemesterFlag()\n            semesterDao.setCurrentSemester(roomId)\n            \n            // Update settings with current semester\n            updateCurrentSemesterInSettings(roomId)\n        }\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n        \n        return roomId\n    }\n    \n    suspend fun updateSemester(semester: Semester) {\n        // Update in Room\n        semesterDao.update(semester)\n        \n        // If this is marked as current semester, clear other flags\n        if (semester.isCurrentSemester) {\n            semesterDao.clearCurrentSemesterFlag()\n            semesterDao.setCurrentSemester(semester.id)\n            \n            // Update settings with current semester\n            updateCurrentSemesterInSettings(semester.id)\n        }\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    suspend fun deleteSemester(semester: Semester) {\n        // Mark as inactive instead of deleting\n        val inactiveSemester = semester.copy(isActive = false)\n        semesterDao.update(inactiveSemester)\n        \n        // Schedule sync with Firebase\n        scheduleSync()\n    }\n    \n    fun getAllActiveSemesters(): LiveData<List<Semester>> {\n        return semesterDao.getAllActiveSemesters()\n    }\n    \n    suspend fun getAllActiveSemestersSync(): List<Semester> {\n        return semesterDao.getAllActiveSemestersSync()\n    }\n    \n    suspend fun getSemesterById(id: Long): Semester? {\n        return semesterDao.getSemesterById(id)\n    }\n    \n    fun getCurrentSemester(): LiveData<Semester?> {\n        return semesterDao.getCurrentSemester()\n    }\n    \n    suspend fun getCurrentSemesterSync(): Semester? {\n        return semesterDao.getCurrentSemesterSync()\n    }\n    \n    suspend fun setCurrentSemester(semesterId: Long) {\n        semesterDao.clearCurrentSemesterFlag()\n        semesterDao.setCurrentSemester(semesterId)\n        \n        // Update settings with current semester\n        updateCurrentSemesterInSettings(semesterId)\n    }\n    \n    // Settings operations using SettingsManager\n    private val settingsManager = SettingsManager(context)\n    \n    fun getSettings(): LiveData<AppSettings?> {\n        // Create a LiveData wrapper for the settings\n        val liveData = MutableLiveData<AppSettings>()\n        liveData.value = settingsManager.getSettings()\n        return liveData\n    }\n    \n    suspend fun getSettingsSync(): AppSettings {\n        return settingsManager.getSettings()\n    }\n    \n    suspend fun updateSettings(settings: AppSettings) {\n        // Update using SettingsManager\n        settingsManager.saveSettings(settings)\n        \n        // If auto sync is enabled, schedule sync\n        if (settings.autoSyncEnabled) {\n            scheduleSync()\n        }\n    }\n    \n    private suspend fun updateCurrentSemesterInSettings(semesterId: Long) {\n        settingsManager.setCurrentSemester(semesterId)\n    }\n    \n    // Synchronization methods\n    private fun scheduleSync() {\n        val syncWorkRequest = OneTimeWorkRequestBuilder<DataSyncWorker>()\n            .setInitialDelay(1, TimeUnit.MINUTES)\n            .build()\n        \n        workManager.enqueueUniqueWork(\n            \"data_sync\",\n            ExistingWorkPolicy.REPLACE,\n            syncWorkRequest\n        )\n    }\n    \n    private fun schedulePeriodicSync() {\n        val syncWorkRequest = OneTimeWorkRequestBuilder<DataSyncWorker>()\n            .setInitialDelay(15, TimeUnit.MINUTES)\n            .build()\n        \n        workManager.enqueueUniqueWork(\n            \"periodic_sync\",\n            ExistingWorkPolicy.KEEP,\n            syncWorkRequest\n        )\n    }\n    \n    suspend fun performSync(): Long {\n        // First, sync local changes to cloud\n        val timestamp = System.currentTimeMillis()\n        \n        // Check if auto sync is enabled\n        val settings = settingsManager.getSettings()\n        if (!settings.autoSyncEnabled) {\n            return 0\n        }\n        \n        // Sync semesters\n        val unsynchronizedSemesters = semesterDao.getUnsyncedSemesters(timestamp)\n        for (semester in unsynchronizedSemesters) {\n            val cloudId = firebaseService.syncSemester(semester)\n            if (cloudId > 0) {\n                // Update sync timestamp\n                val syncedSemester = semester.copy(lastSyncTimestamp = timestamp)\n                semesterDao.update(syncedSemester)\n            }\n        }\n        \n        // Sync classes\n        val unsynchronizedClasses = classDao.getUnsyncedClasses(timestamp)\n        for (classItem in unsynchronizedClasses) {\n            val cloudId = firebaseService.syncClass(classItem)\n            if (cloudId > 0) {\n                // Update sync timestamp\n                val syncedClass = classItem.copy(lastSyncTimestamp = timestamp)\n                classDao.update(syncedClass)\n            }\n        }\n        \n        // Sync meetings\n        val unsynchronizedMeetings = meetingDao.getUnsyncedMeetings(timestamp)\n        for (meeting in unsynchronizedMeetings) {\n            val cloudId = firebaseService.syncMeeting(meeting)\n            if (cloudId > 0) {\n                // Update sync timestamp\n                val syncedMeeting = meeting.copy(lastSyncTimestamp = timestamp)\n                meetingDao.update(syncedMeeting)\n            }\n        }\n        \n        // Then, sync from cloud to local\n        syncFromCloud()\n        \n        // Update last sync timestamp in settings\n        settingsManager.updateLastSyncTime(timestamp)\n        \n        return timestamp\n    }\n    \n    private suspend fun syncFromCloud() {\n        // Get semesters from cloud\n        val cloudSemesters = firebaseService.getSemesters()\n        for (cloudSemester in cloudSemesters) {\n            val localSemester = semesterDao.getSemesterById(cloudSemester.id)\n            \n            if (localSemester == null) {\n                // New semester from cloud\n                semesterDao.insert(cloudSemester)\n            } else if (cloudSemester.lastSyncTimestamp > localSemester.lastSyncTimestamp) {\n                // Cloud semester is newer\n                semesterDao.update(cloudSemester)\n            }\n        }\n        \n        // Get classes from cloud\n        val cloudClasses = firebaseService.getClasses()\n        for (cloudClass in cloudClasses) {\n            val localClass = classDao.getClassById(cloudClass.id)\n            \n            if (localClass == null) {\n                // New class from cloud\n                classDao.insert(cloudClass)\n            } else if (cloudClass.lastSyncTimestamp > localClass.lastSyncTimestamp) {\n                // Cloud class is newer\n                classDao.update(cloudClass)\n            }\n        }\n        \n        // Get meetings from cloud\n        val cloudMeetings = firebaseService.getMeetings()\n        for (cloudMeeting in cloudMeetings) {\n            val localMeeting = meetingDao.getMeetingById(cloudMeeting.id)\n            \n            if (localMeeting == null) {\n                // New meeting from cloud\n                meetingDao.insert(cloudMeeting)\n            } else if (cloudMeeting.lastSyncTimestamp > localMeeting.lastSyncTimestamp) {\n                // Cloud meeting is newer\n                meetingDao.update(cloudMeeting)\n            }\n        }\n    }\n}"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1748159222577,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph"
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Repository.kt C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example teacherscheduler\\data 23 problems"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :272"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :283"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :294 ▲ Unused import directive :16"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Unused import directive :17"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Unused import directive :18"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Unused import directive :19"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Constructor parameter is never used as a property :23"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Property \"settings Dao\" is never used :28"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Function \"getAllActiveClasses Sync\" is never used:69 ▲ Function \"getAllActive Meetings Sync\" is never used :116 A Function \"getAllActiveSemesters Sync\" is never used :181 A Function \"getSemesterByld\" is never used :185"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Function \"getCurrentSemesterSync\" is never used :193"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :215"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :219"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :229"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Condition 'cloudld > O' is always false :272 ▲ Condition 'cloudld > O' is always false :283 ▲ Condition 'cloudld > O' is always false :294 Typo: In word 'unsynchronized' :269 Typo: In word 'unsynchronized' :280"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Typo: In word 'unsynchronized' :291"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "57d5c245-06f7-42a6-9f26-cddcb2c33ce4",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Repository.kt C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example teacherscheduler\\data 23 problems"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :272"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :283"
                },
                {
                    "type": "text",
                    "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :294 ▲ Unused import directive :16"
                },
                {
                    "type": "text",
                    "text": "▲ Unused import directive :17"
                },
                {
                    "type": "text",
                    "text": "A Unused import directive :18"
                },
                {
                    "type": "text",
                    "text": "▲ Unused import directive :19"
                },
                {
                    "type": "text",
                    "text": "A Constructor parameter is never used as a property :23"
                },
                {
                    "type": "text",
                    "text": "A Property \"settings Dao\" is never used :28"
                },
                {
                    "type": "text",
                    "text": "▲ Function \"getAllActiveClasses Sync\" is never used:69 ▲ Function \"getAllActive Meetings Sync\" is never used :116 A Function \"getAllActiveSemesters Sync\" is never used :181 A Function \"getSemesterByld\" is never used :185"
                },
                {
                    "type": "text",
                    "text": "A Function \"getCurrentSemesterSync\" is never used :193"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :215"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :219"
                },
                {
                    "type": "text",
                    "text": "▲ Redundant 'suspend' modifier :229"
                },
                {
                    "type": "text",
                    "text": "A Condition 'cloudld > O' is always false :272 ▲ Condition 'cloudld > O' is always false :283 ▲ Condition 'cloudld > O' is always false :294 Typo: In word 'unsynchronized' :269 Typo: In word 'unsynchronized' :280"
                },
                {
                    "type": "text",
                    "text": "Typo: In word 'unsynchronized' :291"
                },
                {
                    "type": "text",
                    "text": "@DataManager.kt"
                },
                {
                    "type": "text",
                    "text": "C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example\\teacherscheduler\\data 20 problems"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'semesterld' found. :61"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'reminderMinutes' found. :71"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'semesterld'. :133"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'semesterld'. :134"
                },
                {
                    "type": "text",
                    "text": "→ No parameter with name 'reminderMinutes' found. :152"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'reminderMinutes'. :152"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'reminderMinutes'. :152"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'semesterld'. :166"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'semesterld'. :170"
                },
                {
                    "type": "text",
                    "text": "● No parameter with name 'reminder Minutes' found. :201"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'reminderMinutes'. :201"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'reminderMinutes'. :201"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'semesterld'. :215"
                },
                {
                    "type": "text",
                    "text": "● Unresolved reference 'semesterld'. :219"
                },
                {
                    "type": "text",
                    "text": "Do not place Android context classes in static fields (static reference to `Notification Helper' which has field 'context' pointing to `Context'); this is a memory leak ▲ Function \"getClasses ForSemester\" is never used :169"
                },
                {
                    "type": "text",
                    "text": "Function \"getMeetings ForSemester\" is never used :218 ▲ Function \"performCloudSync\" is never used :254"
                },
                {
                    "type": "text",
                    "text": "Parameter \"e\" is never used :279"
                },
                {
                    "type": "text",
                    "text": "A Parameter \"e\" is never used :330"
                },
                {
                    "type": "text",
                    "text": "FirebaseService.kt C:\\Users\\nares\\Studio Projects\\TeacherScheduler\\app\\src\\main\\java\\com\\example\\teacherscheduler\\data\\remote 24 problems → Unresolved reference 'semesterld'. :128"
                },
                {
                    "type": "text",
                    "text": "Unresolved reference 'reminderMinutes'. :140"
                },
                {
                    "type": "text",
                    "text": "● Unresolved reference 'createdAt'. :141"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'semesterld' found. :174"
                },
                {
                    "type": "text",
                    "text": "• No parameter with name 'reminderMinutes' found. :186"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'createdAt' found. :187"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'semesterld'. :207"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'reminderMinutes'. :218"
                },
                {
                    "type": "text",
                    "text": "→ Unresolved reference 'createdAt'. :219"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'semesterld' found. :252"
                },
                {
                    "type": "text",
                    "text": "• No parameter with name 'reminderMinutes' found. :263"
                },
                {
                    "type": "text",
                    "text": "No parameter with name 'createdAt' found. :264"
                },
                {
                    "type": "text",
                    "text": "A Function \"signOut\" is never used :54"
                },
                {
                    "type": "text",
                    "text": "▲ Unchecked cast of 'kotlin.Any?' to 'kotlin.collections.List<kotlin.Long>'. :182"
                },
                {
                    "type": "text",
                    "text": "A Function \"deleteClass\" is never used :279"
                },
                {
                    "type": "text",
                    "text": "▲ Function \"deleteMeeting\" is never used :296"
                },
                {
                    "type": "text",
                    "text": "A Function \"deleteSemester\" is never used :313"
                },
                {
                    "type": "text",
                    "text": "▲ Equality check can be used instead of elvis for nullable boolean check :106 ▲ Equality check can be used instead of elvis for nullable boolean check :107 ▲ Equality check can be used instead of elvis for nullable boolean check :183 ▲ Equality check can be used instead of elvis for nullable boolean check :184 ▲ Equality check can be used instead of elvis for nullable boolean check :185 ▲ Equality check can be used instead of elvis for nullable boolean check :261 ▲ Equality check can be used instead of elvis for nullable boolean check :262"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1748159269118,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph"
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Repository.kt C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example teacherscheduler\\data 23 problems"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :272"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :283"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Argument type mismatch: actual type is 'kotlin.Int', but 'kotlin.Boolean' was expected. :294 ▲ Unused import directive :16"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Unused import directive :17"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Unused import directive :18"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Unused import directive :19"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Constructor parameter is never used as a property :23"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Property \"settings Dao\" is never used :28"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Function \"getAllActiveClasses Sync\" is never used:69 ▲ Function \"getAllActive Meetings Sync\" is never used :116 A Function \"getAllActiveSemesters Sync\" is never used :181 A Function \"getSemesterByld\" is never used :185"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Function \"getCurrentSemesterSync\" is never used :193"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :215"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :219"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Redundant 'suspend' modifier :229"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Condition 'cloudld > O' is always false :272 ▲ Condition 'cloudld > O' is always false :283 ▲ Condition 'cloudld > O' is always false :294 Typo: In word 'unsynchronized' :269 Typo: In word 'unsynchronized' :280"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Typo: In word 'unsynchronized' :291"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@DataManager.kt"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "C:\\Users\\nares\\StudioProjects\\TeacherScheduler\\app\\src\\main\\java\\com\\example\\teacherscheduler\\data 20 problems"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'semesterld' found. :61"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'reminderMinutes' found. :71"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'semesterld'. :133"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'semesterld'. :134"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ No parameter with name 'reminderMinutes' found. :152"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'reminderMinutes'. :152"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'reminderMinutes'. :152"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'semesterld'. :166"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'semesterld'. :170"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "● No parameter with name 'reminder Minutes' found. :201"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'reminderMinutes'. :201"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'reminderMinutes'. :201"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'semesterld'. :215"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "● Unresolved reference 'semesterld'. :219"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Do not place Android context classes in static fields (static reference to `Notification Helper' which has field 'context' pointing to `Context'); this is a memory leak ▲ Function \"getClasses ForSemester\" is never used :169"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Function \"getMeetings ForSemester\" is never used :218 ▲ Function \"performCloudSync\" is never used :254"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Parameter \"e\" is never used :279"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Parameter \"e\" is never used :330"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "FirebaseService.kt C:\\Users\\nares\\Studio Projects\\TeacherScheduler\\app\\src\\main\\java\\com\\example\\teacherscheduler\\data\\remote 24 problems → Unresolved reference 'semesterld'. :128"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unresolved reference 'reminderMinutes'. :140"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "● Unresolved reference 'createdAt'. :141"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'semesterld' found. :174"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "• No parameter with name 'reminderMinutes' found. :186"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'createdAt' found. :187"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'semesterld'. :207"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'reminderMinutes'. :218"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "→ Unresolved reference 'createdAt'. :219"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'semesterld' found. :252"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "• No parameter with name 'reminderMinutes' found. :263"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "No parameter with name 'createdAt' found. :264"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Function \"signOut\" is never used :54"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Unchecked cast of 'kotlin.Any?' to 'kotlin.collections.List<kotlin.Long>'. :182"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Function \"deleteClass\" is never used :279"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Function \"deleteMeeting\" is never used :296"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "A Function \"deleteSemester\" is never used :313"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "▲ Equality check can be used instead of elvis for nullable boolean check :106 ▲ Equality check can be used instead of elvis for nullable boolean check :107 ▲ Equality check can be used instead of elvis for nullable boolean check :183 ▲ Equality check can be used instead of elvis for nullable boolean check :184 ▲ Equality check can be used instead of elvis for nullable boolean check :185 ▲ Equality check can be used instead of elvis for nullable boolean check :261 ▲ Equality check can be used instead of elvis for nullable boolean check :262"
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "isAgent": true,
    "isCustomAgent": false,
    "isUnitTestsAgent": false,
    "autoApply": false
}
}